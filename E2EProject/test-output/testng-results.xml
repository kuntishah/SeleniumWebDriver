<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="Suite" duration-ms="28629" started-at="2017-12-03T06:58:06Z" finished-at="2017-12-03T06:58:35Z">
    <groups>
    </groups>
    <test name="Test1" duration-ms="16093" started-at="2017-12-03T06:58:06Z" finished-at="2017-12-03T06:58:22Z">
      <class name="Academy.bin.LoginQAClick">
        <test-method status="PASS" signature="initialise()[pri:0, instance:Academy.bin.LoginQAClick@37afeb11]" name="initialise" is-config="true" duration-ms="1327" started-at="2017-12-02T22:58:06Z" finished-at="2017-12-02T22:58:07Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialise -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:Academy.bin.LoginQAClick@37afeb11]" name="basePageNavigation" duration-ms="9479" started-at="2017-12-02T22:58:07Z" data-provider="getLoginData" finished-at="2017-12-02T22:58:17Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[nonrestricteduser@abc.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[qwerty]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="basePageNavigation(java.lang.String, java.lang.String)[pri:0, instance:Academy.bin.LoginQAClick@37afeb11]" name="basePageNavigation" duration-ms="5152" started-at="2017-12-02T22:58:17Z" data-provider="getLoginData" finished-at="2017-12-02T22:58:22Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[restricteduser@abc.com]]>
              </value>
            </param>
            <param index="1">
              <value>
                <![CDATA[asdfgh]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- basePageNavigation -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Academy.bin.LoginQAClick@37afeb11]" name="teardown" is-config="true" duration-ms="115" started-at="2017-12-02T22:58:22Z" finished-at="2017-12-02T22:58:22Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Academy.bin.LoginQAClick -->
    </test> <!-- Test1 -->
    <test name="Test2" duration-ms="7516" started-at="2017-12-03T06:58:27Z" finished-at="2017-12-03T06:58:35Z">
      <class name="Academy.bin.TestCase2">
        <test-method status="PASS" signature="initialise()[pri:0, instance:Academy.bin.TestCase2@77847718]" name="initialise" is-config="true" duration-ms="6385" started-at="2017-12-02T22:58:27Z" finished-at="2017-12-02T22:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- initialise -->
        <test-method status="PASS" signature="testLandingPage()[pri:0, instance:Academy.bin.TestCase2@77847718]" name="testLandingPage" duration-ms="2" started-at="2017-12-02T22:58:33Z" finished-at="2017-12-02T22:58:33Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- testLandingPage -->
        <test-method status="FAIL" signature="test2()[pri:0, instance:Academy.bin.TestCase2@77847718]" name="test2" duration-ms="55" started-at="2017-12-02T22:58:33Z" depends-on-methods="Academy.bin.TestCase2.testLandingPage" finished-at="2017-12-02T22:58:33Z">
          <exception class="java.lang.AssertionError">
            <message>
              <![CDATA[expected [FEATURED C99OURSES] but found [FEATURED COURSES]]]>
            </message>
            <full-stacktrace>
              <![CDATA[java.lang.AssertionError: expected [FEATURED C99OURSES] but found [FEATURED COURSES]
	at org.testng.Assert.fail(Assert.java:93)
	at org.testng.Assert.failNotEquals(Assert.java:512)
	at org.testng.Assert.assertEqualsImpl(Assert.java:134)
	at org.testng.Assert.assertEquals(Assert.java:115)
	at org.testng.Assert.assertEquals(Assert.java:189)
	at org.testng.Assert.assertEquals(Assert.java:199)
	at Academy.bin.TestCase2.test2(TestCase2.java:48)
	at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)
	at sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)
	at java.lang.reflect.Method.invoke(Method.java:498)
	at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:108)
	at org.testng.internal.Invoker.invokeMethod(Invoker.java:661)
	at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:869)
	at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:1193)
	at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:126)
	at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
	at org.testng.TestRunner.privateRun(TestRunner.java:744)
	at org.testng.TestRunner.run(TestRunner.java:602)
	at org.testng.SuiteRunner.runTest(SuiteRunner.java:380)
	at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:375)
	at org.testng.SuiteRunner.privateRun(SuiteRunner.java:340)
	at org.testng.SuiteRunner.run(SuiteRunner.java:289)
	at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
	at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:86)
	at org.testng.TestNG.runSuitesSequentially(TestNG.java:1301)
	at org.testng.TestNG.runSuitesLocally(TestNG.java:1226)
	at org.testng.TestNG.runSuites(TestNG.java:1144)
	at org.testng.TestNG.run(TestNG.java:1115)
	at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
	at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
	at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- java.lang.AssertionError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test2 -->
        <test-method status="PASS" signature="test3()[pri:0, instance:Academy.bin.TestCase2@77847718]" name="test3" duration-ms="44" started-at="2017-12-02T22:58:34Z" depends-on-methods="Academy.bin.TestCase2.testLandingPage" finished-at="2017-12-02T22:58:34Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- test3 -->
        <test-method status="PASS" signature="teardown()[pri:0, instance:Academy.bin.TestCase2@77847718]" name="teardown" is-config="true" duration-ms="112" started-at="2017-12-02T22:58:34Z" finished-at="2017-12-02T22:58:35Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- teardown -->
      </class> <!-- Academy.bin.TestCase2 -->
    </test> <!-- Test2 -->
  </suite> <!-- Suite -->
</testng-results>
